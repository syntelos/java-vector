<?xml version="1.0" encoding="UTF-8"?>
<project name="vector" default="update">

  <property name="src" value="src"/>
  <property name="ant" value="ant"/>
  <property name="bin" value="bin"/>
  <property name="lib" value="lib"/>
  <property name="dst" value="."/>

  <property name="awt.src" value="awt/src"/>
  <property name="demo.src" value="demo/src"/>
  <property name="geda.src" value="geda/src"/>

  <property name="compiler.source" value="1.5"/>
  <property name="compiler.target" value="1.5"/>
  <property name="compiler.debug" value="true"/>
  <property name="compiler.encoding" value="utf-8"/>

  <import file="ant/build.in.version.xml"/>
  <property file="${user.home}/update.properties"/>
  <import file="ant/build.in.update.xml"/>

  <path id="lib.path">

    <fileset dir="${lib}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="all" description="Rebuild all jars">
    <antcall target="update"/>
    <antcall target="update-awt"/>
    <antcall target="demo"/>
    <antcall target="geda"/>
  </target>

  <target name="awt" if="vector.awt.update" depends="awt-jar" description="Copy jar product to targets defined in '{user.home}/update.properties' by name 'vector.awt.update'.">

    <do-update src="${target.awt.jar}" tgt="${vector.awt.update}" />
  </target>

  <target name="awt-jar" depends="awt-compile" description="Package awt jar, clean bin.">

    <java outputproperty="lib.path.manifest" classpath="${ant}" classname="LibPathManifest" failonerror="true">
      <arg value="${target.vector.jar}"/>
      <arg value="${toString:lib.path}"/>
    </java>
    <echo message="Main-Class: platform.Frame"/>
    <echo message="Class-Path: ${lib.path.manifest}"/>

    <delete file="${existing.awt.jar}"/>

    <jar jarfile="${target.awt.jar}" basedir="${bin}" >
      <manifest>
        <attribute name="Main-Class" value="platform.Frame"/>
        <attribute name="Class-Path" value="${lib.path.manifest}"/>
      </manifest>
    </jar>

    <delete dir="${bin}"/>
  </target>

  <target name="awt-compile" depends="version">
    <delete dir="${bin}"/>
    <mkdir dir="${bin}"/>
    <copy todir="${bin}">
      <fileset dir="${awt.src}" includes="**/*.properties"/>
      <fileset dir="${awt.src}" includes="**/*.txt"/>
      <fileset dir="${awt.src}" includes="**/*.xml"/>
    </copy>
    <javac srcdir="${awt.src}" destdir="${bin}" debug="${compiler.debug}" encoding="${compiler.encoding}"
           source="${compiler.source}" target="${compiler.target}">
      <classpath>
        <pathelement path="${lib.path}"/>
        <pathelement location="${existing.vector.jar}"/>
      </classpath>
    </javac>
  </target>

  <target name="demo" depends="demo-compile" description="Package demo jar, clean bin.  Depends on the target jar.">

    <java outputproperty="lib.path.manifest" classpath="${ant}" classname="LibPathManifest" failonerror="true" fork="true">
      <arg value="${target.awt.jar}"/>
      <arg value="${target.vector.jar}"/>
      <arg value="${toString:lib.path}"/>
    </java>
    <echo message="Main-Class: platform.Frame"/>
    <echo message="Class-Path: ${lib.path.manifest}"/>

    <delete file="${existing.demo.jar}"/>

    <jar jarfile="${target.demo.jar}" basedir="${bin}" >
      <manifest>
        <attribute name="Main-Class" value="platform.Frame"/>
        <attribute name="Class-Path" value="${lib.path.manifest}"/>
      </manifest>
    </jar>

    <delete dir="${bin}"/>
  </target>

  <target name="demo-compile" depends="version">
    <delete dir="${bin}"/>
    <mkdir dir="${bin}"/>
    <copy todir="${bin}">
      <fileset dir="${demo.src}" includes="**/*.properties"/>
      <fileset dir="${demo.src}" includes="**/*.txt"/>
      <fileset dir="${demo.src}" includes="**/*.xml"/>
    </copy>
    <javac srcdir="${demo.src}" destdir="${bin}" debug="${compiler.debug}" encoding="${compiler.encoding}"
           source="${compiler.source}" target="${compiler.target}">
      <classpath>
        <pathelement path="${lib.path}"/>
        <pathelement location="${existing.vector.jar}"/>
      </classpath>
    </javac>
  </target>

  <target name="geda" depends="geda-compile" description="Package geda jar, clean bin.  Depends on the target jar.">

    <java outputproperty="lib.path.manifest" classpath="${ant}" classname="LibPathManifest" failonerror="true" fork="true">
      <arg value="${target.awt.jar}"/>
      <arg value="${target.vector.jar}"/>
      <arg value="${toString:lib.path}"/>
    </java>
    <echo message="Main-Class: geda.Frame"/>
    <echo message="Class-Path: ${lib.path.manifest}"/>

    <delete file="${existing.geda.jar}"/>

    <jar jarfile="${target.geda.jar}" basedir="${bin}" >
      <manifest>
        <attribute name="Main-Class" value="geda.Frame"/>
        <attribute name="Class-Path" value="${lib.path.manifest}"/>
      </manifest>
    </jar>

    <delete dir="${bin}"/>
  </target>

  <target name="geda-compile" depends="version">
    <delete dir="${bin}"/>
    <mkdir dir="${bin}"/>
    <copy todir="${bin}">
      <fileset dir="${geda.src}" includes="**/*.properties"/>
      <fileset dir="${geda.src}" includes="**/*.txt"/>
      <fileset dir="${geda.src}" includes="**/*.xml"/>
    </copy>
    <javac srcdir="${geda.src}" destdir="${bin}" debug="${compiler.debug}" encoding="${compiler.encoding}"
           source="${compiler.source}" target="${compiler.target}">
      <classpath>
        <pathelement path="${lib.path}"/>
        <pathelement location="${existing.vector.jar}"/>
      </classpath>
    </javac>
  </target>

  <target name="update" if="vector.update" depends="jar" description="Copy jar product to targets defined in '{user.home}/update.properties' by name 'vector.update'.">

    <do-update src="${target.vector.jar}" tgt="${vector.update}" />
  </target>

  <target name="jar" depends="compile" description="Package bin to target jar, clean bin.">

    <java outputproperty="lib.path.manifest" classpath="${ant}" classname="LibPathManifest" failonerror="true" fork="true">
      <arg value="${target.awt.jar}"/>
      <arg value="${toString:lib.path}"/>
    </java>
    <echo message="Main-Class: platform.Frame"/>
    <echo message="Class-Path: ${lib.path.manifest}"/>

    <delete file="${existing.vector.jar}"/>
    <jar jarfile="${target.vector.jar}" basedir="${bin}" >
      <manifest>
        <attribute name="Main-Class" value="platform.Frame"/>
        <attribute name="Class-Path" value="${lib.path.manifest}"/>
      </manifest>
    </jar>
    <delete dir="${bin}"/>
  </target>

  <target name="compile" depends="version" description="Compile src to bin">
    <delete dir="${bin}"/>
    <mkdir dir="${bin}"/>
    <copy todir="${bin}">
      <fileset dir="${src}" includes="**/*.properties"/>
      <fileset dir="${src}" includes="**/*.txt"/>
      <fileset dir="${src}" includes="**/*.xml"/>
    </copy>
    <javac srcdir="${src}" destdir="${bin}" debug="${compiler.debug}" encoding="${compiler.encoding}"
           classpathref="lib.path" source="${compiler.source}" target="${compiler.target}">
      <classpath>
        <pathelement path="${lib.path}"/>
        <pathelement location="${existing.awt.jar}"/>
      </classpath>
    </javac>
  </target>

  <target name="clean" description="Delete products">
    <delete dir="${bin}"/>
  </target>

  <target name="version" description="Report current version.">
    <version/>
    <property name="target.vector.jar" value="${dst}/${ant.project.name}-${this.version}.jar"/>
    <property name="target.awt.jar" value="${dst}/${ant.project.name}-awt-${this.version}.jar"/>
    <property name="target.demo.jar" value="${dst}/${ant.project.name}-demo-${this.version}.jar"/>
    <property name="target.geda.jar" value="${dst}/${ant.project.name}-geda-${this.version}.jar"/>

    <java outputproperty="existing.vector.jar" classpath="${ant}" classname="JarPublisher" failonerror="true" fork="true">
      <arg value="${ant.project.name}"/>
    </java>
    <java outputproperty="existing.awt.jar" classpath="${ant}" classname="JarPublisher" failonerror="true" fork="true">
      <arg value="${ant.project.name}-awt"/>
    </java>
    <java outputproperty="existing.demo.jar" classpath="${ant}" classname="JarPublisher" failonerror="true" fork="true">
      <arg value="${ant.project.name}-demo"/>
    </java>
    <java outputproperty="existing.geda.jar" classpath="${ant}" classname="JarPublisher" failonerror="true" fork="true">
      <arg value="${ant.project.name}-geda"/>
    </java>

  </target>

  <target name="build" description="Increment version build number and report result.">
    <version-build/>
    <version/>
  </target>

  <target name="major" description="Increment version major number and report result.">
    <version-major/>
    <version/>
  </target>

  <target name="minor" description="Increment version minor number and report result.">
    <version-minor/>
    <version/>
  </target>

  <target name="android-version">

    <java outputproperty="android.lib.path" classpath="${ant}" classname="AndroidLibPath" failonerror="true" fork="true">

      <arg value="10"/>
    </java>

    <echo message="Android-Lib-Path: ${android.lib.path}"/>

  </target>

</project>
